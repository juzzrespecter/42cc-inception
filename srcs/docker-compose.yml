version: "3.8"
services:
  nginx:
      build: ./requirements/nginx
      image: inception-nginx
      networks:
        - inception-frontend
      restart: always
      ports:
        - 443
  php:
      build: ./requirements/php
      image: inception-phpsrv
      networks:
        - inception-frontend
        - inception-backend
      depends_on:
        - nginx
        - mariadb
      restart: always
      expose:
        - 8000
      environment:
        - DB_NAME=${MYSQL_DB}
        - DB_USER=${MYSQL_USER}
        - DB_PASSWORD=${MYSQL_USER_PASSWD}
        - DB_HOST=${DB_HOST}
      volumes:
        - wp:/var/www/html
  mariadb:
      build: ./requirements/mariadb
      image: inception-mariadb
      networks:
        - inception-backend
      restart: always
      expose:
        - 3306
      environment:
        - MYSQL_ROOT_PASSWD=${MYSQL_ROOT_PASSWD}
        - MYSQL_DB=${MYSQL_DB}
        - MYSQL_USER=${MYSQL_USER}
        - MYSQL_USER_PASSWD=${MYSQL_USER_PASSWD}
      volumes:
        - db:/var/lib/mysql
  redis:
      build: ./requirements/redis
      image: inception-redis
      restart: always
      depends_on:
        - php
  vsftpd:
      build: ./requirements/vsftpd
      image: inception-vsftpd
      restart: always
      depends_on:
        - php      
  adminer:
      build: ./requirements/adminer
      image: inception-adminer
      restart: always
#  grafana:
#      build: ./requirements/grafana
#      image: inception-grafana
#      restart: on_failure
#  prometheus:
#      build: ./requirements/prometheus
#      image: inception-prometheus
#      restart: on_failure
    
# volume paths: /home/danrodri/data/*
volumes:
  db:
    driver_opts:
      type: none
      o: bind
      device: /home/danrodri/data/db
  wp:
    driver_opts:
      type: none
      o: bind
      device: /home/danrodri/data/wp

networks:
  inception-backend:
  inception-frontend:
